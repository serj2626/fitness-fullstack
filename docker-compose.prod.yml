name: dvfitness

networks:
  dvfitness_network:
    driver: bridge

volumes:
  dvfitness_postgres_data:
  dvfitness_redis_data:
  certbot_conf:
  certbot_www:

services:
  nginx:
    image: nginx:latest
    container_name: dvfitness_nginx_container
    restart: always
    networks:
      - dvfitness_network
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./backend/static:/app/backend/static
      - ./backend/media:/app/backend/media
      - ./backend/logs:/app/backend/logs
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - backend
      - frontend

  db:
    image: postgres:17-alpine
    container_name: dvfitness_db
    env_file: ./backend/.env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - dvfitness_postgres_data:/var/lib/postgresql/data
    restart: always
    networks:
      - dvfitness_network

  redis:
    image: redis:7-alpine
    container_name: dvfitness_redis_container
    restart: always
    networks:
      - dvfitness_network
    volumes:
      - dvfitness_redis_data:/data

  backend:
    build: ./backend
    container_name: dvfitness_backend_container
    image: stal_backend_image
    restart: always
    env_file: ./backend/.env
    command: "gunicorn -c gunicorn.py app.wsgi:application"
    volumes:
      - ./backend:/app/backend
    networks:
      - dvfitness_network
    ports:
      - "8001:8000"
    depends_on:
      - db
      - redis

  frontend:
    build: ./frontend
    container_name: dvfitness_frontend_container
    image: stal_frontend_image
    env_file: ./frontend/.env
    networks:
      - dvfitness_network
    restart: always
    volumes:
      - ./frontend/public:/app/public
    ports:
      - "3001:3000"
    depends_on:
      - backend

  # certbot:
  #   image: certbot/certbot
  #   container_name: stal_certbot
  #   volumes:
  #     - certbot_conf:/etc/letsencrypt
  #     - certbot_www:/var/www/certbot
  #   entrypoint: ""
  #   command: >
  #     certonly
  #     --webroot
  #     -w /var/www/certbot
  #     -d stalstandartspb.ru
  #     -d www.stalstandartspb.ru
  #     --email info@stalstandartspb.ru
  #     --agree-tos
  #     --no-eff-email
  #     --non-interactive
  #     --expand
  #   depends_on:
  #     - nginx


  # certbot:
  #     image: certbot/certbot
  #     container_name: dvfitness_certbot_container
  #     volumes:
  #       - ./certbot/conf:/etc/letsencrypt
  #       - ./certbot/www:/var/www/certbot
  #     command: certonly --webroot --webroot-path=/var/www/certbot/ --email info@stalstspb.ru --agree-tos --no-eff-email -d stalstandartspb.ru -d www.stalrtspb.ru
  #     depends_on:
  #       - nginx